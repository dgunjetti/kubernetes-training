
elb is l3/l4 load balancer

user -> elb -> service
there are two types elb.
tcp b2b will rewrite the source ip address
connection rewrite(dnat) will leave the source ip but will rewrite the destination address.

tcp connection is uninterrupted between user and service.

elb -> l7 loadbalaner (http aware. has a routing map (hostname, path) -> backend)
l7 loadbalacer will terminate teh connection

l7 -> service. 

l7 virtul hosting for cloud 

elb -> array of l7

user connectes to ip on l4 elb.

Ingress is L7 load balancer.
elb is service of type loadbalancer.

Ingress exposes http and https routes from outside the cluster to services within the cluster.

traffic routing is controlled by rules defined on the Ingress

in order for ingress resource to work, the cluster must have an ingress controller running.

ingress resource objects provide configuration for l7 loadbalancers.

ingress controller takes the ingress resources programes l7 loadbalancer

ingress is common schema for configuring the l7 loadbalancer

implementations out there -  gce,  nginx controller, there are other controllers.

install nginx ingress controller into aws cluster:


k get nodes -o wide  
can see kernel image and version.

k get nodes -o wide --show-labels 
master will have annotation, so u can figure out.

ingress controllers works across namespace. one l7 controller for entire cluster.
can save money on elb 
one elb,  then ingress conroller redistribute the traffic across the cluster.

helm install stable/nginx-ingress

k run nginx --image=nginx --replicas=3
k expose deployment nginx --port=80

k -n nginx-ingress get svc -o wide

put the elb to ingress.hashfab.io

k create -f manifest/ingress1.yaml

k ger ing -o yaml

k -n nginx-ingress logs pod1

chrome: ingress.hashfab.io

add deployment nginx2
add rule ingress2.hashfab.io in yaml

chrome: nginx2.hashfab.io

create another ingress resource ingress-canary

so multiple ingress resources can work 


kube-lego - gets tls certs for your server automatically


TLS 
you can secure an ingress by specifying a secret that contains a tls private key and certificate.

https://github.com/kubernetes/contrib/tree/master/ingress/controllers/nginx/examples/tls









